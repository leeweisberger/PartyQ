doctype html
html
  head
    title Example of the Authorization Code flow with Spotify    
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/css/materialize.min.css")
    link(href="//fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet")
    link(href='/css/styles.css', rel='stylesheet')  
    meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0")
  

  body
    nav
      .nav-wrapper
        a.brand-logo(href='/') PartyQ
    .container#loggedin
      h3 Create Playlist
      .row.create_playlist
        .input-field.col.l12.s12
          input.validate#playlistName(type='text',required, name='playlistName')             
          label(for='playlistName') Playlist Name             
      input#access_token(type='hidden', name='access_token', value='#{pageData.access_token}')             
      input#user_id(type='hidden', name='user_id', value='setByHTML')             
      input#user_name(type='hidden', name='user_name', value='setByHTML')             
      input#refresh_token(type='hidden', name='refresh_token', value='#{pageData.access_token}')           
      button.btn.waves-effect.waves-light(onclick='createPlaylist()') Submit
        i.material-icons.right send
       
    .container.not_displayed#notloggedin
      h3 There was an error logging you in!
    .divider.top_margin
    .container#playlists
      h3 Your Playlists
      table.hover.responsive-table.bordered
        thead
          tr
            th(data-field='Name') Name
            th(data-field='Pin') Pin
        tbody#table_body
    .modal.bottom-sheet#modal
      .modal-content
        h4#modal-title
        table.hover.responsive-table.bordered
          thead
            tr
              th(data-field='Track') Track
              th(data-field='Artist') Artist
              th(data-field='Album') Album
          tbody#modal-body  
    script(src='//code.jquery.com/jquery-1.10.1.min.js')
    script(src="//cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/js/materialize.min.js") 
    script.

      if ('#{pageData.error}' && '#{pageData.error}'!='null') {
        alert('There was an error during the authentication');
        alert('#{pageData.error}');

        $('#loggedin').hide();
        $('#notloggedin').show();
      } 
      else {        
          $.ajax({
              url: 'https://api.spotify.com/v1/me',
            headers: {
              'Authorization': 'Bearer ' + '#{pageData.access_token}'
            },
              success: function(response) {
                document.getElementById("user_id").value=response.id;
                document.getElementById("user_name").value=response.display_name;
                getPlaylists();
              }
          });
      }

      function findPlaylist(pin){
        $.post("/findPlaylist",
        {pin:pin,ajax:'true'}, 
        function(data, status){
          window.location = data.redirect;
        });
      }

      function viewSongs(pin,playlist_name){
        $.post("/addSongToPlaylist/getSongs",
        {pin:pin,refresh_token:'#{pageData.refresh_token}'}, 
        function(data, status){
          var modal_body = document.getElementById("modal-body");
          while (modal_body.firstChild) {
            modal_body.removeChild(modal_body.firstChild);
          }
          document.getElementById("modal-title").innerHTML=playlist_name;
          for(i=0; i<data.length; i++){
            var entry = data[i];
            var row = document.createElement("tr");
            var track = document.createElement("td");
            track.appendChild(document.createTextNode(entry.name));
            var artist = document.createElement("td");
            artist.appendChild(document.createTextNode(entry.artist));
            var album = document.createElement("td");
            album.appendChild(document.createTextNode(entry.album));
            row.appendChild(track);
            row.appendChild(artist);
            row.appendChild(album);
            modal_body.appendChild(row);
          }
          $('#modal').openModal();
        });
      }

      function getPlaylists(){
        var table_body = document.getElementById("table_body");
        while (table_body.firstChild) {
          table_body.removeChild(table_body.firstChild);
        }

        var user_id = document.getElementById("user_id").value;
        $.post("/getPlaylists",
        {user_id:user_id}, 
        function(data, status){
          for(i=0; i<data.pageData.length; i++){
            var entry = data.pageData[i];
            var row = document.createElement("tr");
            var name = document.createElement("td");
            name.appendChild(document.createTextNode(entry.playlist_name));
            var pin = document.createElement("td");
            pin.appendChild(document.createTextNode(entry.pin));
            var button = document.createElement("a");
            button.className=('btn waves-effect waves-yellow');
            button.appendChild(document.createTextNode('Add Songs'));
            //- var f = findPlaylist(entry.pin);
            button.onclick = (function(args){
              return function(){
                findPlaylist(args);
              }
            })(entry.pin);
            var view_songs = document.createElement("a");
            view_songs.className=('btn waves-effect waves-yellow left_margin');
            view_songs.appendChild(document.createTextNode('View Songs'));
            //- var f = findPlaylist(entry.pin);
            view_songs.onclick = (function(arg1,arg2){
              return function(){
                viewSongs(arg1,arg2);
              }
            })(entry.pin,entry.playlist_name);
            row.appendChild(name);
            row.appendChild(pin);
            row.appendChild(button);
            row.appendChild(view_songs);
            var table_body = document.getElementById("table_body");
            table_body.appendChild(row);
          }
          
          $('#playlists').show();
        });
      }
      function createPlaylist(){
        if ($("#playlistName").val().trim() == "") {
          Materialize.toast("Playlist name cannot be empty", 3000, 'rounded red' );

        }
        else{
          var playlist_name=document.getElementById('playlistName').value
          var user_id = document.getElementById("user_id").value;
          var user_name = document.getElementById("user_name").value;

          $.post("/createPlaylist",
          {playlistName:playlist_name,access_token:'#{pageData.access_token}',refresh_token:'#{pageData.refresh_token}', user_id:user_id, user_name: user_name}, 
          function(data, status){            
            Materialize.toast("The pin for " + data.pageData.playlist_name +' is ' +data.pageData.pin, 5000, 'rounded green' );
            getPlaylists();
          });
        }

      }